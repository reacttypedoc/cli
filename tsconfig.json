{
    "compilerOptions": {
        /* Basic Options */
        "target": "es6", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
        "module": "commonjs", /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
        "outDir": "./dist/", /* . */
        "removeComments": true, /* Do not emit comments to output. */
        "importHelpers": true, /* Import emit helpers from 'tslib'. */
        /* Strict Type-Checking Options */
        "strict": true, /* Enable all strict type-checking options. */
        /* Additional Checks */
        "noUnusedLocals": true, /* Report errors on unused locals. */
        "noUnusedParameters": true, /* Report errors on unused parameters. */
        "noImplicitReturns": true, /* Report error when not all code paths in function return a value. */
        "noFallthroughCasesInSwitch": true, /* Report errors for fallthrough cases in switch statement. */
        /* Module Resolution Options */
        "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        "allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        "preserveSymlinks": true, /* Do not resolve the real path of symlinks. */
        /* Source Map Options */
        "inlineSourceMap": true, /* Emit a single file with source maps instead of having a separate file. */
        /* Experimental Options */
        "experimentalDecorators": true, /* Enables experimental support for ES7 decorators. */
        "emitDecoratorMetadata": true, /* Enables experimental support for emitting type metadata for decorators. */
        "plugins": [
            {"name":"tslint-language-service"}
        ]
    },
    "exclude": [
        "node_modules"
    ]
}